PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT[is.na(PorBarrioT)] <- 0
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=5)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT$pred_2018 <- pred2018
View(PorBarrioT)
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=1)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT$pred_2018 <- pred2018
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=5)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT$pred_2018 <- pred2018
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=7)
pred2018<-predict(adv_knn,PorBarrioT)
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016,data=PorBarrioT,k=7)
pred2018<-predict(adv_knn,PorBarrioT)
ggplot(PorBarrioT, aes(FECHA,AÑO_2018)) + geom_line()
adv_knn<-knnreg(AÑO_2018+AÑO_2017~AÑO_2014+AÑO_2015+AÑO_2016,data=PorBarrioT,k=7)
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=7)
pred2018<-predict(adv_knn,PorBarrioT)
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=7)
pred2018<-predict(adv_knn,PorBarrioT)
pred2018<-predict(adv_knn,PorBarrioT)
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=7)
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=500)
pred2018<-predict(adv_knn,PorBarrioT)
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=2)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT[is.na(PorBarrioT)] <- 5
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=2)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 5
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=2)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT$pred_2018 <- pred2018
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"))
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=2)
pred2018<-predict(adv_knn,PorBarrioT)
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=3)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT$pred_2018 <- pred2018
View(PorBarrioT)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
View(PorBarrioT)
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=3)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"))
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=3)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"))
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=3)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT$pred_2018 <- pred2018
View(PorBarrioT)
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"))
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=3)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT$pred_2018 <- pred2018
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"))
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=PorBarrioT,k=3)
pred2018<-predict(adv_knn,PorBarrioT)
PorBarrioT$pred_2018 <- pred2018
ggplot(PorBarrioT, aes(FECHA,AÑO_2018)) + geom_line()
install.packages("tidyverse")
library(tidyverse)
ggplot(PorBarrioT, aes(FECHA,AÑO_2018)) + geom_line()
pairs(PorBarrioT)
pairs(select(PorBarrioT,3, 2))
summary(porBarrio2014)
mse_tr<-mean((PorBarrioT$AÑO_2018-pred2018)^2)
(mse_tr)
set.seed(1)
p_tr<-0.7
N_datos<-dim(datos_advertising)[1]
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-datos_advertising[ix_tr,]
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
porBarrio2014 <- group_by(t2014, BARRIO, FECHA)
porBarrio2014 <- summarize(porBarrio2014, AÑO_2014 = n())
porBarrio2015 <- group_by(t2015, BARRIO, FECHA)
porBarrio2015 <- summarize(porBarrio2015, AÑO_2015 = n())
porBarrio2016 <- group_by(t2016, BARRIO, FECHA)
porBarrio2016 <- summarize(porBarrio2016, AÑO_2016 = n())
porBarrio2017 <- group_by(t2017, BARRIO, FECHA)
porBarrio2017 <- summarize(porBarrio2017, AÑO_2017 = n())
porBarrio2018 <- group_by(t2018, BARRIO, FECHA)
porBarrio2018 <- summarize(porBarrio2018, AÑO_2018 = n())
#Join de tablas
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"))
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
set.seed(1)
p_tr<-0.7
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
mse_k<-function(k,data_tr,data_vl,formula_mod){
adv_knn<-knnreg(formula_mod,data=datos_tr,k=k)
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_tr$AÑO_2018-y_tr_pred)^2)
y_vl_pred<-predict(adv_knn,datos_vl)
mse_vl<-mean((datos_vl$AÑO_2018-y_vl_pred)^2)
return(list(mse_tr=mse_tr,mse_vl=mse_vl))
}
modelo <- -formula("AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017")
modelo <- formula("AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017")
MSE<-lapply(1:n_tr,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
library(shiny)
library(dplyr)
library(caret)
MSE<-lapply(1:n_tr,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=datos_tr,k=3) # evalúa el método con k=3
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_vl$AÑO_2018-y_tr_pred)^2) # calcula el mse de entrenamiento
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=datos_tr,k=3) # evalúa el método con k=3
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_vl$AÑO_2018-y_tr_pred)^2) # calcula el mse de entrenamiento
View(datos_tr)
View(datos_vl)
set.seed(1)
p_tr<-0.7
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"))
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
set.seed(1)
p_tr<-0.7
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=datos_tr,k=3) # evalúa el método con k=3
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_vl$AÑO_2018-y_tr_pred)^2) # calcula el mse de entrenamiento
mse_tr<-mean((datos_tr$AÑO_2018-y_tr_pred)^2) # calcula el mse de entrenamiento
y_vl_pred<-predict(adv_knn,datos_vl)
mse_vl<-mean((datos_vl$sales-y_vl_pred)^2)
(mse_vl)
y_vl_pred<-predict(adv_knn,datos_vl)
mse_vl<-mean((datos_vl$sales-y_vl_pred)^2)
y_vl_pred<-predict(adv_knn,datos_vl)
mse_vl<-mean((datos_vl$AÑO_2018-y_vl_pred)^2)
(mse_vl)
set.seed(1)
p_tr<-0.7
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
mse_k<-function(k,data_tr,data_vl,formula_mod){
adv_knn<-knnreg(formula_mod,data=datos_tr,k=k)
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_tr$AÑO_2018-y_tr_pred)^2)
y_vl_pred<-predict(adv_knn,datos_vl)
mse_vl<-mean((datos_vl$AÑO_2018-y_vl_pred)^2)
return(list(mse_tr=mse_tr,mse_vl=mse_vl))
}
modelo <- formula("AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017")
MSE<-lapply(1:n_tr,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
MSE<-lapply(1:10,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
View(MSE)
mse_tr<-sapply(1:n_tr,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(1:n_tr,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
mse_tr<-sapply(1:10,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(1:10,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
MSE<-lapply(1:100,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
MSE<-lapply(1:999,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
MSE<-lapply(1:100,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
mse_tr<-sapply(1:10,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(1:10,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
num_vec<-1:100
plot(num_vec,mse_tr,type="l",col="blue",lwd=2,xlab="k, número de vecinos",
ylab="MSE (unidades vendidas)",las=1)
lines(num_vec,mse_vl,col="red",lwd=2)
grid()
legend("topleft",col=c("red","blue"),lwd=2,
legend=c("Validación","Entrenamiento")
num_vec<-1:100
num_vec<-1:100
plot(num_vec,mse_tr,type="l",col="blue",lwd=2,xlab="k, número de vecinos",ylab="MSE (unidades vendidas)",las=1)
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
plot(num_vec,mse_tr,type="l",col="blue",lwd=2,xlab="k, número de vecinos",ylab="MSE (unidades vendidas)",las=1)
lines(num_vec,mse_vl,col="red",lwd=2)
grid()
legend("topleft",col=c("red","blue"),lwd=2,
legend=c("Validación","Entrenamiento")
plot(num_vec,mse_tr,type="l",col="blue",lwd=2,xlab="k, número de vecinos",ylab="MSE (unidades vendidas)",las=1)
lines(num_vec,mse_vl,col="red",lwd=2)
grid()
legend("topleft",col=c("red","blue"),lwd=2,legend=c("Validación","Entrenamiento")
lines(num_vec,mse_vl,col="red",lwd=2)
lines(num_vec,mse_vl,col="red",lwd=2)
num_vec<-1:100
MSE<-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
num_vec<-1:20
MSE<-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
plot(num_vec,mse_tr,type="l",col="blue",lwd=2,xlab="k, número de vecinos",ylab="MSE (unidades vendidas)",las=1)
lines(num_vec,mse_vl,col="red",lwd=2)
grid()
legend("topleft",col=c("red","blue"),lwd=2,legend=c("Validación","Entrenamiento")
(mse_tr)
d
(mse_tr)
(mse_vl)
(mse_tr-mse_vl)
num_vec<-1:200
1MSE<-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
MSE<-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
num_vec<-1:150
MSE<-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
num_vec<-1:50
MSE<-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
which.min(mse_tr-mse_vl)
mse_tr-mse_vl
which.min(abs(mse_tr-mse_vl))
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=datos_tr,k=3) # evalúa el método con k=3
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_tr$AÑO_2018-y_tr_pred)^2) # calcula el mse de entrenamiento
set.seed(1)
p_tr<-0.7
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=datos_tr,k=3) # evalúa el método con k=3
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_tr$AÑO_2018-y_tr_pred)^2) # calcula el mse de entrenamiento
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=datos_tr,k=1) # evalúa el método con k=3
y_tr_pred<-predict(adv_knn,datos_tr)
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT[is.na(PorBarrioT)] <- 0
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=datos_tr,k=1) # evalúa el método con k=3
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_tr$AÑO_2018-y_tr_pred)^2) # calcula el mse de entrenamiento
p_tr<-0.7
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
adv_knn<-knnreg(AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017,data=datos_tr,k=1) # evalúa el método con k=3
y_tr_pred<-predict(adv_knn,datos_tr)
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"))
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
set.seed(1)
p_tr<-0.7
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
num_vec<-1:50
num_vec<-1:100
MSE<-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
which.min(abs(mse_tr-mse_vl))
mse_tr-mse_vl[99]
(mse_tr-mse_vl)[99]
(mse_tr-mse_vl)[98]
(mse_tr-mse_vl)[99]
tryCatch( { MSE<-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo) ; print(res) }, error = function(e) {an.error.occured <<- TRUE})
num_vec<-1:1000
tryCatch( { MSE<-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo) ; print(res) }, error = function(e) {an.error.occured <<- TRUE})
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
MSE
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
MSE <- MSE[:-1]
MSE[-length(MSE)]
MSE <- MSE[-length(MSE)]
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
tryCatch( { MSE <-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo) ; print(num_vec) }, error = function(e) {an.error.occured <<- TRUE})
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
num_vec <- length(v)
num_vec <- length(MSE)
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
which.min(abs(mse_tr-mse_vl))
(mse_tr-mse_vl)[1]
num_vec
num_vec<-1:1000
num_vec <- (1:length(MSE))
num_vec<-1:1000
tryCatch( { MSE <-lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)}, error = function(e) {an.error.occured <<- TRUE})
num_vec <- (1:length(MSE))
num_vec
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
which.min(abs(mse_tr-mse_vl))
num_vec <- (1:length(MSE)+1)
num_vec
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
which.min(abs(mse_tr-mse_vl))
(mse_tr-mse_vl)
PorBarrioT <- merge(porBarrio2014, porBarrio2015, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2016, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2017, by = c("BARRIO","FECHA"), all = TRUE)
PorBarrioT <- merge(PorBarrioT, porBarrio2018, by = c("BARRIO","FECHA"))
PorBarrioT[is.na(PorBarrioT)] <- 0
set.seed(1)
p_tr<-0.6
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
mse_k<-function(k,data_tr,data_vl,formula_mod){
adv_knn<-knnreg(formula_mod,data=datos_tr,k=k)
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_tr$AÑO_2018-y_tr_pred)^2)
y_vl_pred<-predict(adv_knn,datos_vl)
mse_vl<-mean((datos_vl$AÑO_2018-y_vl_pred)^2)
return(list(mse_tr=mse_tr,mse_vl=mse_vl))
}
modelo <- formula("AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017")
num_vec<-1:1000
tryCatch( { MSE <- lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)}, error = function(e) {an.error.occured <<- TRUE})
num_vec <- (1:length(MSE))
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
which.min(abs(mse_tr-mse_vl))
(mse_tr-mse_vl)
View(PorBarrioT)
set.seed(98956561)
p_tr<-0.6
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
mse_k<-function(k,data_tr,data_vl,formula_mod){
adv_knn<-knnreg(formula_mod,data=datos_tr,k=k)
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_tr$AÑO_2018-y_tr_pred)^2)
y_vl_pred<-predict(adv_knn,datos_vl)
mse_vl<-mean((datos_vl$AÑO_2018-y_vl_pred)^2)
return(list(mse_tr=mse_tr,mse_vl=mse_vl))
}
modelo <- formula("AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017")
num_vec<-1:1000
tryCatch( { MSE <- lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)}, error = function(e) {an.error.occured <<- TRUE})
num_vec <- (1:length(MSE))
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
which.min(abs(mse_tr-mse_vl))
(mse_tr-mse_vl)
new_k <- which.min(abs(mse_tr-mse_vl))
diario2018()
diario2018 <- function(){
p_tr<-0.6
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
modelo <- formula("AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017")
num_vec<-1:1000
tryCatch( { MSE <- lapply(num_vec,mse_k,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)}, error = function(e) {an.error.occured <<- TRUE})
num_vec <- (1:length(MSE))
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
new_k <- which.min(abs(mse_tr-mse_vl))
new_k
}
diario2018()
View(t2014)
View(t2014)
t2014 <- read.csv("./data/Accidentalidad_georreferenciada_2014.csv", )
View(t2014)
t2014 <- read.csv("./data/Accidentalidad_georreferenciada_2014.csv", )
t2014 <- select(t2014,5, 16)
t2014$FECHA <- substring(t2014$FECHA, 6,10)
t2015 <- read.csv("./data/Accidentalidad_georreferenciada_2015.csv")
t2015 <- select(t2015,5, 16)
t2015$FECHA <- substring(t2015$FECHA, 6,10)
t2016 <- read.csv("./data/Accidentalidad_georreferenciada_2016.csv")
t2016 <- select(t2016,5, 16)
t2016$FECHA <- substring(t2016$FECHA, 6,10)
t2017 <- read.csv("./data/Accidentalidad_georreferenciada_2017.csv")
t2017 <- select(t2017,5, 16)
t2017$FECHA <- substring(t2017$FECHA, 6,10)
t2018 <- read.csv("./data/Accidentalidad_georreferenciada_2018.csv")
t2018 <- select(t2018,5, 16)
t2018$FECHA <- substring(t2018$FECHA, 6,10)
View(t2018)
porBarrio2014 <- group_by(t2014, COMUNA, FECHA)
porBarrio2014 <- summarize(porBarrio2014, AÑO_2014 = n())
View(porBarrio2014)
t2014 <- read.csv("./data/Accidentalidad_georreferenciada_2014.csv", )
t2014 <- select(t2014,5, 16)
t2014$FECHA <- substring(t2014$FECHA, 6,10)
t2015 <- read.csv("./data/Accidentalidad_georreferenciada_2015.csv")
t2015 <- select(t2015,5, 16)
t2015$FECHA <- substring(t2015$FECHA, 6,10)
t2016 <- read.csv("./data/Accidentalidad_georreferenciada_2016.csv")
t2016 <- select(t2016,5, 16)
t2016$FECHA <- substring(t2016$FECHA, 6,10)
t2017 <- read.csv("./data/Accidentalidad_georreferenciada_2017.csv")
t2017 <- select(t2017,5, 16)
t2017$FECHA <- substring(t2017$FECHA, 6,10)
t2018 <- read.csv("./data/Accidentalidad_georreferenciada_2018.csv")
t2018 <- select(t2018,5, 16)
t2018$FECHA <- substring(t2018$FECHA, 6,10)
porComuna2014 <- group_by(t2014, COMUNA, FECHA)
porComuna2014 <- summarize(porComuna2014, AÑO_2014 = n())
porComuna2015 <- group_by(t2015, COMUNA, FECHA)
porComuna2015 <- summarize(porComuna2015, AÑO_2015 = n())
porComuna2016 <- group_by(t2016, COMUNA, FECHA)
porComuna2016 <- summarize(porComuna2016, AÑO_2016 = n())
porComuna2017 <- group_by(t2017, COMUNA, FECHA)
porComuna2017 <- summarize(porComuna2017, AÑO_2017 = n())
porComuna2018 <- group_by(t2018, COMUNA, FECHA)
porComuna2018 <- summarize(porComuna2018, AÑO_2018 = n())
View(porComuna2014)
PorComunaT <- merge(porComuna2014, porComuna2015, by = c("COMUNA","FECHA"), all = TRUE)
PorComunaT <- merge(PorComunaT, porComuna2016, by = c("COMUNA","FECHA"), all = TRUE)
PorComunaT <- merge(PorComunaT, porComuna2017, by = c("COMUNA","FECHA"), all = TRUE)
PorComunaT <- merge(PorComunaT, porComuna2018, by = c("COMUNA","FECHA"))
PorComunaT[is.na(PorComunaT)] <- 0
View(PorComunaT)
mse_k2018<-function(k,data_tr,data_vl,formula_mod){
adv_knn<-knnreg(formula_mod,data=datos_tr,k=k)
y_tr_pred<-predict(adv_knn,datos_tr)
mse_tr<-mean((datos_tr$AÑO_2018-y_tr_pred)^2)
y_vl_pred<-predict(adv_knn,datos_vl)
mse_vl<-mean((datos_vl$AÑO_2018-y_vl_pred)^2)
return(list(mse_tr=mse_tr,mse_vl=mse_vl))
}
diario2018 <- function(){
p_tr<-0.6
N_datos<-dim(PorBarrioT)[1]
n_tr<-round(N_datos*p_tr)
ix_tr<-sample(N_datos,n_tr,replace = FALSE)
datos_tr<-PorBarrioT[ix_tr,]
datos_vl<-PorBarrioT[-ix_tr,]
modelo <- formula("AÑO_2018~AÑO_2014+AÑO_2015+AÑO_2016+AÑO_2017")
num_vec<-1:1000
tryCatch( { MSE <- lapply(num_vec,mse_k2018,data_tr=data_tr,data_vl = data_vl,formula_mod = modelo)}, error = function(e) {an.error.occured <<- TRUE})
num_vec <- (1:length(MSE))
mse_tr<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_tr},y=MSE)
mse_vl<-sapply(num_vec,function(x,y){`[[`(y,x)$mse_vl},y=MSE)
new_k <- which.min(abs(mse_tr-mse_vl))
new_k
}
diario2018()
